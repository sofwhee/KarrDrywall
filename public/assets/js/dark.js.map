{
  "version": 3,
  "sources": ["../../../src/assets/js/dark.js"],
  "sourcesContent": ["//\n//    The Dark Mode System\n//\n\n// determines a new users dark mode preferences\nfunction detectColorScheme() {\n    // default to the light theme\n    let theme = \"light\";\n\n    // check localStorage for a saved 'theme' variable. if it's there, the user has visited before, so apply the necessary theme choices\n    if (localStorage.getItem(\"theme\")) {\n        theme = localStorage.getItem(\"theme\");\n    }\n    // if it's not there, check to see if the user has applied dark mode preferences themselves in the browser\n    else if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n        theme = \"dark\";\n    }\n\n    // if there is no preference set, the default of light will be used. apply accordingly\n    theme === \"dark\" ? enableDarkMode() : disableDarkMode();\n}\n\n// run on page load\ndetectColorScheme();\n\n// add event listener to the dark mode button toggle\ndocument.getElementById(\"dark-mode-toggle\").addEventListener(\"click\", () => {\n    // on click, check localStorage for the dark mode value, use to apply the opposite of what's saved\n    localStorage.getItem(\"theme\") === \"light\" ? enableDarkMode() : disableDarkMode();\n});\n"],
  "mappings": ";;AAKA,WAAS,oBAAoB;AAEzB,QAAI,QAAQ;AAGZ,QAAI,aAAa,QAAQ,OAAO,GAAG;AAC/B,cAAQ,aAAa,QAAQ,OAAO;AAAA,IACxC,WAES,OAAO,cAAc,OAAO,WAAW,8BAA8B,EAAE,SAAS;AACrF,cAAQ;AAAA,IACZ;AAGA,cAAU,SAAS,eAAe,IAAI,gBAAgB;AAAA,EAC1D;AAGA,oBAAkB;AAGlB,WAAS,eAAe,kBAAkB,EAAE,iBAAiB,SAAS,MAAM;AAExE,iBAAa,QAAQ,OAAO,MAAM,UAAU,eAAe,IAAI,gBAAgB;AAAA,EACnF,CAAC;",
  "names": []
}
